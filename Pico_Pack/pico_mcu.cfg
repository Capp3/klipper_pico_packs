# Dont forget to add [include pico_mcu.cfg] to printer.cfg

# Define the new MCU. Refer to Klipper docs to locate the serial ID
[mcu aux]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E66038B713776933-if00
restart_method: command

# Tese are the two avilable IO Pins, currently set as output pins. Use as needed
[output_pin aux_io0]
pin: aux:gpio27
value: 1
pwm: False



[output_pin aux_beat]
### This is to provide a heartbeat on the LED that is onboard the pico
pin: aux:gpio25
value: .050
pwm: True

# Config for an i2c temp sensor, change if using different i2c device. 
[temperature_sensor room_temp]
sensor_type: BME280
i2c_address: 118
#   Default is 118 (0x76). Some BME280 sensors have an address of 119
#   (0x77).
#   The i2c address of the device. This must specified as a decimal
#   number (not in hex). The default depends on the type of device.
i2c_mcu: aux
#   The name of the micro-controller that the chip is connected to.
#   The default is "mcu".
i2c_bus: i2c0f
#   If the micro-controller supports multiple I2C busses then one may
#   specify the micro-controller bus name here. The default depends on
#   the type of micro-controller.
#i2c_speed:
#   The I2C speed (in Hz) to use when communicating with the device.
#   The Klipper implementation on most micro-controllers is hard-coded
#   to 100000 and changing this value has no effect. The default is
#   100000.

# [adxl345 hotend]
# cs_pin: aux:gpio5
# #   The SPI enable pin for the sensor. This parameter must be provided.
# #spi_speed: 5000000
# #   The SPI speed (in hz) to use when communicating with the chip.
# #   The default is 5000000.
# spi_bus: aux:spi0b
# #   Have read that when defining the spi_bus that the prefix of "aux:" may not work/matter. Need to evaluate.
# #axes_map: x, y, z
# #   The accelerometer axis for each of the printer's X, Y, and Z axes.
# #   This may be useful if the accelerometer is mounted in an
# #   orientation that does not match the printer orientation. For
# #   example, one could set this to "y, x, z" to swap the X and Y axes.
# #   It is also possible to negate an axis if the accelerometer
# #   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".

# [adxl345 bed]
# cs_pin: aux:gpio9
# #spi_speed: 5000000
# spi_bus: aux:spi1a
# #axes_map: x, y, z

# [resonance_tester]
# accel_chip_x: adxl345 hotend
# accel_chip_y: adxl345 bed
# probe_points: 100, 100, 40
